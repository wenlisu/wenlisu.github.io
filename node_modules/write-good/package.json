{
  "_args": [
    [
      {
        "raw": "write-good@^0.10.0",
        "scope": null,
        "escapedName": "write-good",
        "name": "write-good",
        "rawSpec": "^0.10.0",
        "spec": ">=0.10.0 <0.11.0",
        "type": "range"
      },
      "/Users/webdev/projects/wenlisu.github.io/node_modules/hexo-admin"
    ]
  ],
  "_cnpm_publish_time": 1490820002920,
  "_from": "write-good@^0.10.0",
  "_hasShrinkwrap": false,
  "_id": "write-good@0.10.3",
  "_location": "/write-good",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/write-good-0.10.3.tgz_1490820000816_0.27034426922909915"
  },
  "_npmUser": {
    "name": "richardlitt",
    "email": "richard.littauer@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "write-good@^0.10.0",
    "scope": null,
    "escapedName": "write-good",
    "name": "write-good",
    "rawSpec": "^0.10.0",
    "spec": ">=0.10.0 <0.11.0",
    "type": "range"
  },
  "_requiredBy": [
    "/hexo-admin"
  ],
  "_resolved": "http://192.168.1.118:7001/write-good/download/write-good-0.10.3.tgz",
  "_shasum": "cf9f45942a1bc1c9b75ceb4404d35bd3d0dfd4af",
  "_shrinkwrap": null,
  "_spec": "write-good@^0.10.0",
  "_where": "/Users/webdev/projects/wenlisu.github.io/node_modules/hexo-admin",
  "author": {
    "name": "Brian Ford"
  },
  "bin": {
    "write-good": "bin/write-good.js",
    "writegood": "bin/write-good.js"
  },
  "bugs": {
    "url": "https://github.com/btford/write-good/issues"
  },
  "coordinates": [
    45.5191755,
    -73.57892310000001
  ],
  "dependencies": {
    "adverb-where": "~0.0.0",
    "e-prime": "~0.10.0",
    "no-cliches": "~0.1.0",
    "object.assign": "^4.0.4",
    "passive-voice": "~0.0.0",
    "too-wordy": "~0.1.0",
    "weasel-words": "~0.1.0"
  },
  "description": "Naive linter for English prose",
  "devDependencies": {
    "jasmine-node": "2.0.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "cf9f45942a1bc1c9b75ceb4404d35bd3d0dfd4af",
    "size": 7247,
    "noattachment": false,
    "key": "/write-good/-/write-good-0.10.3.tgz",
    "tarball": "http://192.168.1.118:7001/write-good/download/write-good-0.10.3.tgz"
  },
  "gitHead": "6deaba3a97c91ed892e6311ae79b534ee52044cc",
  "homepage": "https://github.com/btford/write-good#readme",
  "keywords": [
    "english",
    "writing",
    "prose",
    "words"
  ],
  "license": "MIT",
  "main": "write-good.js",
  "maintainers": [
    {
      "name": "btford",
      "email": "briantford@gmail.com"
    },
    {
      "name": "duereg",
      "email": "matt@mattblair.co"
    },
    {
      "name": "richardlitt",
      "email": "richard.littauer@gmail.com"
    }
  ],
  "name": "write-good",
  "optionalDependencies": {},
  "publish_time": 1490820002920,
  "readme": "# write good [![Build Status](https://travis-ci.org/btford/write-good.svg?branch=master)](https://travis-ci.org/btford/write-good)\n\nNaive linter for English prose for developers who can't write good and wanna learn to do other stuff good too.\n\n\n## Use\n\n```shell\nnpm install write-good\n```\n\n**Important:** Do not use this tool to be a jerk to other people about their writing.\n\n\n## API\n\n`writeGood` is a function that takes a string and returns an array of suggestions.\n\n```javascript\nvar writeGood = require('write-good');\n\nvar suggestions = writeGood('So the cat was stolen.');\n\n// suggestions:\n//\n// [{\n//   suggestion: \"omit 'So' from the beginning of sentences\",\n//   index: 0, offset: 2\n// }, {\n//   suggestion: \"'was stolen' is passive voice\",\n//   index: 11, offset: 10\n// }]\n```\n\n`writeGood` takes an optional second argument that allows you to disable certain checks.\n\nYou can disable checking for passive voice like this:\n\n```javascript\nvar writeGood = require('write-good');\n\nvar suggestions = writeGood('So the cat was stolen', { passive: false});\n// suggestions: []\n```\n\n\n## CLI\n\nYou can use `write-good` as a command-line tool by installing it globally:\n\n```shell\nnpm install -g write-good\n```\n\n`write-good` takes a [glob](https://github.com/isaacs/node-glob) and prints suggestions to stdout:\n\n```shell\n$ write-good *.md\n\nIn README.md\n=============\n = writeGood('So the cat was stolen.');\n                         ^^^^^^^^^^\n\"was stolen\" is passive voice on line 20 at column 40\n-------------\n//   suggestion: \"'was stolen' is passive voice\",\n                   ^^^^^^^^^^\n\"was stolen\" is passive voice on line 28 at column 19\n```\n\nYou can run just specific checks like this:\n\n```shell\nwrite-good *.md --weasel --so\n```\n\nOr exclude checks like this:\n\n```shell\nwrite-good *.md --no-passive\n```\n\nOr include checks like this:\n\n```shell\n# E-Prime is disabled by default.\nwrite-good *.md --yes-eprime\n```\n\nYou can run just with text without supplying files:\n\n```shell\nwrite-good --text=\"It should have been defined there.\"\n```\n\nYou can even supply multi-line text:\n\n```shell\nwrite-good --text=\"I can't see a problem there that's not been defined yet.\nShould be defined again.\"\n```\n\nYou can also pass other arguments:\n\n```shell\nwrite-good --text=\"It should have been defined there.\" --no-passive\n```\n\nYou can even fetch output from a remote file:\n\n```shell\nwrite-good --text=\"$(curl https://raw.githubusercontent.com/btford/write-good/master/README.md)\"\n```\n\n## Checks\n\nYou can disable any combination of the following by providing a key with value `false` as the second argument to `writeGood`.\n\n### `passive`\nChecks for passive voice.\n\n### `illusion`\nChecks for lexical illusions – cases where a word is repeated.\n\n### `so`\nChecks for `so` at the beginning of the sentence.\n\n### `thereIs`\nChecks for `there is` or `there are` at the beginning of the sentence.\n\n### `weasel`\nChecks for \"weasel words.\"\n\n### `adverb`\nChecks for adverbs that can weaken meaning: really, very, extremely, etc.\n\n### `tooWordy`\nChecks for wordy phrases and unnecessary words.\n\n### `cliches`\nChecks for common cliches.\n\n### `eprime`\nChecks for [\"to-be\"](https://en.wikipedia.org/wiki/E-Prime) verbs. _Disabled by default_ \n\n## See also\n\nI came across these resources while doing research to make this module.\nThey might be helpful.\n\n### Code\n\n* [shell script for avoiding \"weasel words\"](http://matt.might.net/articles/shell-scripts-for-passive-voice-weasel-words-duplicates/) – I based my initial implementation on this\n* [Academic Writing Check](https://github.com/devd/Academic-Writing-Check) – a perl script similar to above\n* [writegood mode](https://github.com/bnbeckwith/writegood-mode) for emacs\n* [natural](https://github.com/NaturalNode/natural) – general purpose NLP toolkit in JavaScript\n* [WordNet](http://wordnet.princeton.edu/) – lexical database of the English language\n* [LanguageTool](https://languagetool.org/) – style and grammar checker implemented in Java\n* [linter-write-good](https://github.com/gepoch/linter-write-good) for [Atom](https://atom.io/)\n\n### Prose\n\n* [Elements of Style](http://www.bartleby.com/141/)\n* [Flesch–Kincaid readability](http://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_test)\n* [Fear and Loathing of the English passive](http://www.lel.ed.ac.uk/~gpullum/passive_loathing.pdf)\n* [Words to Avoid in Educational Writing](http://css-tricks.com/words-avoid-educational-writing/)\n\n### Apps\n\nThis is not an endorsement.\nThese apps have similar functionality that you may find useful.\n\n* [Hemingway App](http://www.hemingwayapp.com/)\n* [Nitpicker](http://nitpickertool.com)\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/btford/write-good.git"
  },
  "scripts": {
    "test": "jasmine-node test"
  },
  "version": "0.10.3"
}
